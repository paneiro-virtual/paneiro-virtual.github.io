"use strict";function Dict(e){var t=create(null);return void 0!=e&&(isIterable(e)?forOf(e,!0,function(e,r){t[e]=r}):assign(t,e)),t}function reduce(e,t,r){aFunction(t);var i,c,o=toIObject(e),n=getKeys(o),s=n.length,u=0;if(arguments.length<3){if(!s)throw TypeError("Reduce of empty object with no initial value");i=o[n[u++]]}else i=Object(r);for(;s>u;)has(o,c=n[u++])&&(i=t(i,o[c],c,e));return i}function includes(e,t){return void 0!==(t==t?keyOf(e,t):findKey(e,function(e){return e!=e}))}function get(e,t){if(has(e,t))return e[t]}function set(e,t,r){return DESCRIPTORS&&t in Object?dP.f(e,t,createDesc(0,r)):e[t]=r,e}function isDict(e){return isObject(e)&&getPrototypeOf(e)===Dict.prototype}var ctx=require("./_ctx"),$export=require("./_export"),createDesc=require("./_property-desc"),assign=require("./_object-assign"),create=require("./_object-create"),getPrototypeOf=require("./_object-gpo"),getKeys=require("./_object-keys"),dP=require("./_object-dp"),keyOf=require("./_keyof"),aFunction=require("./_a-function"),forOf=require("./_for-of"),isIterable=require("./core.is-iterable"),$iterCreate=require("./_iter-create"),step=require("./_iter-step"),isObject=require("./_is-object"),toIObject=require("./_to-iobject"),DESCRIPTORS=require("./_descriptors"),has=require("./_has"),createDictMethod=function(e){var t=1==e,r=4==e;return function(i,c,o){var n,s,u,a=ctx(c,o,3),f=toIObject(i),h=t||7==e||2==e?new("function"==typeof this?this:Dict):void 0;for(n in f)if(has(f,n)&&(s=f[n],u=a(s,n,i),e))if(t)h[n]=u;else if(u)switch(e){case 2:h[n]=s;break;case 3:return!0;case 5:return s;case 6:return n;case 7:h[u[0]]=u[1]}else if(r)return!1;return 3==e||r?r:h}},findKey=createDictMethod(6),createDictIter=function(e){return function(t){return new DictIterator(t,e)}},DictIterator=function(e,t){this._t=toIObject(e),this._a=getKeys(e),this._i=0,this._k=t};$iterCreate(DictIterator,"Dict",function(){var e,t=this,r=t._t,i=t._a,c=t._k;do if(t._i>=i.length)return t._t=void 0,step(1);while(!has(r,e=i[t._i++]));return"keys"==c?step(0,e):"values"==c?step(0,r[e]):step(0,[e,r[e]])}),Dict.prototype=null,$export($export.G+$export.F,{Dict:Dict}),$export($export.S,"Dict",{keys:createDictIter("keys"),values:createDictIter("values"),entries:createDictIter("entries"),forEach:createDictMethod(0),map:createDictMethod(1),filter:createDictMethod(2),some:createDictMethod(3),every:createDictMethod(4),find:createDictMethod(5),findKey:findKey,mapPairs:createDictMethod(7),reduce:reduce,keyOf:keyOf,includes:includes,has:has,get:get,set:set,isDict:isDict});